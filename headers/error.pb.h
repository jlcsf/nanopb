/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_VACCEL_ERROR_PB_H_INCLUDED
#define PB_VACCEL_ERROR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _vaccel_VaccelError {
    pb_size_t which_error;
    union {
        int64_t vaccel_error;
        int64_t agent_error;
    } error;
} vaccel_VaccelError;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define vaccel_VaccelError_init_default          {0, {0}}
#define vaccel_VaccelError_init_zero             {0, {0}}

/* Field tags (for use in manual encoding/decoding) */
#define vaccel_VaccelError_vaccel_error_tag      1
#define vaccel_VaccelError_agent_error_tag       2

/* Struct field encoding specification for nanopb */
#define vaccel_VaccelError_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    INT64,    (error,vaccel_error,error.vaccel_error),   1) \
X(a, STATIC,   ONEOF,    INT64,    (error,agent_error,error.agent_error),   2)
#define vaccel_VaccelError_CALLBACK NULL
#define vaccel_VaccelError_DEFAULT NULL

extern const pb_msgdesc_t vaccel_VaccelError_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define vaccel_VaccelError_fields &vaccel_VaccelError_msg

/* Maximum encoded size of messages (where known) */
#define VACCEL_ERROR_PB_H_MAX_SIZE               vaccel_VaccelError_size
#define vaccel_VaccelError_size                  11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
