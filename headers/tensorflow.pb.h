/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_VACCEL_TENSORFLOW_PB_H_INCLUDED
#define PB_VACCEL_TENSORFLOW_PB_H_INCLUDED
#include <pb.h>
#include "error.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _vaccel_TFDataType {
    /* Add unused value here so that we are compatible
 with what vAccelRT returns us */
    vaccel_TFDataType_TF_UNUSED = 0,
    vaccel_TFDataType_FLOAT = 1,
    vaccel_TFDataType_DOUBLE = 2,
    vaccel_TFDataType_INT32 = 3, /* Int32 tensors are always in 'host' memory. */
    vaccel_TFDataType_UINT8 = 4,
    vaccel_TFDataType_INT16 = 5,
    vaccel_TFDataType_INT8 = 6,
    vaccel_TFDataType_STRING = 7,
    vaccel_TFDataType_COMPLEX = 8, /* Old identifier kept for API backwards compatibility */
    vaccel_TFDataType_INT64 = 9,
    vaccel_TFDataType_BOOL = 10,
    vaccel_TFDataType_QINT8 = 11, /* Quantized int8 */
    vaccel_TFDataType_QUINT8 = 12, /* Quantized uint8 */
    vaccel_TFDataType_QINT32 = 13, /* Quantized int32 */
    vaccel_TFDataType_BFLOAT16 = 14, /* Float32 truncated to 16 bits.  Only for cast ops. */
    vaccel_TFDataType_QINT16 = 15, /* Quantized int16 */
    vaccel_TFDataType_QUINT16 = 16, /* Quantized uint16 */
    vaccel_TFDataType_UINT16 = 17,
    vaccel_TFDataType_COMPLEX128 = 18, /* Double-precision complex */
    vaccel_TFDataType_HALF = 19,
    vaccel_TFDataType_RESOURCE = 20,
    vaccel_TFDataType_VARIANT = 21,
    vaccel_TFDataType_UINT32 = 22,
    vaccel_TFDataType_UINT64 = 23
} vaccel_TFDataType;

/* Struct definitions */
typedef struct _vaccel_TensorflowModelLoadRequest {
    uint32_t session_id;
    int64_t model_id;
} vaccel_TensorflowModelLoadRequest;

typedef struct _vaccel_TensorflowModelLoadResponse {
    pb_size_t which_result;
    union {
        pb_callback_t graph_def;
        vaccel_VaccelError error;
    } result;
} vaccel_TensorflowModelLoadResponse;

typedef struct _vaccel_TensorflowModelUnloadRequest {
    uint32_t session_id;
    int64_t model_id;
} vaccel_TensorflowModelUnloadRequest;

typedef struct _vaccel_TensorflowModelUnloadResponse {
    bool success;
    bool has_error;
    vaccel_VaccelError error;
} vaccel_TensorflowModelUnloadResponse;

typedef struct _vaccel_TFTensor {
    /* Data of the tensor */
    pb_callback_t data;
    /* Dimensions of the tensor */
    pb_callback_t dims;
    /* Data type */
    vaccel_TFDataType type;
} vaccel_TFTensor;

typedef struct _vaccel_TFNode {
    /* Name of the node */
    pb_callback_t name;
    /* Id of the node */
    int64_t id;
} vaccel_TFNode;

typedef struct _vaccel_TensorflowModelRunRequest {
    uint32_t session_id;
    int64_t model_id;
    /* Run options */
    pb_callback_t run_options;
    /* Input nodes & tensors */
    pb_callback_t in_nodes;
    pb_callback_t in_tensors;
    /* Output nodes */
    pb_callback_t out_nodes;
} vaccel_TensorflowModelRunRequest;

typedef struct _vaccel_InferenceResult {
    /* An inference result is a number of output tensors */
    pb_callback_t out_tensors;
} vaccel_InferenceResult;

typedef struct _vaccel_TensorflowModelRunResponse {
    pb_size_t which_result;
    union {
        vaccel_VaccelError error;
        vaccel_InferenceResult tensor_result;
    } result;
} vaccel_TensorflowModelRunResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _vaccel_TFDataType_MIN vaccel_TFDataType_TF_UNUSED
#define _vaccel_TFDataType_MAX vaccel_TFDataType_UINT64
#define _vaccel_TFDataType_ARRAYSIZE ((vaccel_TFDataType)(vaccel_TFDataType_UINT64+1))





#define vaccel_TFTensor_type_ENUMTYPE vaccel_TFDataType






/* Initializer values for message structs */
#define vaccel_TensorflowModelLoadRequest_init_default {0, 0}
#define vaccel_TensorflowModelLoadResponse_init_default {0, {{{NULL}, NULL}}}
#define vaccel_TensorflowModelUnloadRequest_init_default {0, 0}
#define vaccel_TensorflowModelUnloadResponse_init_default {0, false, vaccel_VaccelError_init_default}
#define vaccel_TFTensor_init_default             {{{NULL}, NULL}, {{NULL}, NULL}, _vaccel_TFDataType_MIN}
#define vaccel_TFNode_init_default               {{{NULL}, NULL}, 0}
#define vaccel_TensorflowModelRunRequest_init_default {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define vaccel_InferenceResult_init_default      {{{NULL}, NULL}}
#define vaccel_TensorflowModelRunResponse_init_default {0, {vaccel_VaccelError_init_default}}
#define vaccel_TensorflowModelLoadRequest_init_zero {0, 0}
#define vaccel_TensorflowModelLoadResponse_init_zero {0, {{{NULL}, NULL}}}
#define vaccel_TensorflowModelUnloadRequest_init_zero {0, 0}
#define vaccel_TensorflowModelUnloadResponse_init_zero {0, false, vaccel_VaccelError_init_zero}
#define vaccel_TFTensor_init_zero                {{{NULL}, NULL}, {{NULL}, NULL}, _vaccel_TFDataType_MIN}
#define vaccel_TFNode_init_zero                  {{{NULL}, NULL}, 0}
#define vaccel_TensorflowModelRunRequest_init_zero {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define vaccel_InferenceResult_init_zero         {{{NULL}, NULL}}
#define vaccel_TensorflowModelRunResponse_init_zero {0, {vaccel_VaccelError_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define vaccel_TensorflowModelLoadRequest_session_id_tag 1
#define vaccel_TensorflowModelLoadRequest_model_id_tag 2
#define vaccel_TensorflowModelLoadResponse_graph_def_tag 1
#define vaccel_TensorflowModelLoadResponse_error_tag 2
#define vaccel_TensorflowModelUnloadRequest_session_id_tag 1
#define vaccel_TensorflowModelUnloadRequest_model_id_tag 2
#define vaccel_TensorflowModelUnloadResponse_success_tag 1
#define vaccel_TensorflowModelUnloadResponse_error_tag 2
#define vaccel_TFTensor_data_tag                 1
#define vaccel_TFTensor_dims_tag                 2
#define vaccel_TFTensor_type_tag                 3
#define vaccel_TFNode_name_tag                   1
#define vaccel_TFNode_id_tag                     2
#define vaccel_TensorflowModelRunRequest_session_id_tag 1
#define vaccel_TensorflowModelRunRequest_model_id_tag 2
#define vaccel_TensorflowModelRunRequest_run_options_tag 3
#define vaccel_TensorflowModelRunRequest_in_nodes_tag 4
#define vaccel_TensorflowModelRunRequest_in_tensors_tag 5
#define vaccel_TensorflowModelRunRequest_out_nodes_tag 6
#define vaccel_InferenceResult_out_tensors_tag   1
#define vaccel_TensorflowModelRunResponse_error_tag 1
#define vaccel_TensorflowModelRunResponse_tensor_result_tag 2

/* Struct field encoding specification for nanopb */
#define vaccel_TensorflowModelLoadRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   session_id,        1) \
X(a, STATIC,   SINGULAR, INT64,    model_id,          2)
#define vaccel_TensorflowModelLoadRequest_CALLBACK NULL
#define vaccel_TensorflowModelLoadRequest_DEFAULT NULL

#define vaccel_TensorflowModelLoadResponse_FIELDLIST(X, a) \
X(a, CALLBACK, ONEOF,    BYTES,    (result,graph_def,result.graph_def),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (result,error,result.error),   2)
#define vaccel_TensorflowModelLoadResponse_CALLBACK pb_default_field_callback
#define vaccel_TensorflowModelLoadResponse_DEFAULT NULL
#define vaccel_TensorflowModelLoadResponse_result_error_MSGTYPE vaccel_VaccelError

#define vaccel_TensorflowModelUnloadRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   session_id,        1) \
X(a, STATIC,   SINGULAR, INT64,    model_id,          2)
#define vaccel_TensorflowModelUnloadRequest_CALLBACK NULL
#define vaccel_TensorflowModelUnloadRequest_DEFAULT NULL

#define vaccel_TensorflowModelUnloadResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  error,             2)
#define vaccel_TensorflowModelUnloadResponse_CALLBACK NULL
#define vaccel_TensorflowModelUnloadResponse_DEFAULT NULL
#define vaccel_TensorflowModelUnloadResponse_error_MSGTYPE vaccel_VaccelError

#define vaccel_TFTensor_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              1) \
X(a, CALLBACK, REPEATED, UINT32,   dims,              2) \
X(a, STATIC,   SINGULAR, UENUM,    type,              3)
#define vaccel_TFTensor_CALLBACK pb_default_field_callback
#define vaccel_TFTensor_DEFAULT NULL

#define vaccel_TFNode_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, INT64,    id,                2)
#define vaccel_TFNode_CALLBACK pb_default_field_callback
#define vaccel_TFNode_DEFAULT NULL

#define vaccel_TensorflowModelRunRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   session_id,        1) \
X(a, STATIC,   SINGULAR, INT64,    model_id,          2) \
X(a, CALLBACK, SINGULAR, BYTES,    run_options,       3) \
X(a, CALLBACK, REPEATED, MESSAGE,  in_nodes,          4) \
X(a, CALLBACK, REPEATED, MESSAGE,  in_tensors,        5) \
X(a, CALLBACK, REPEATED, MESSAGE,  out_nodes,         6)
#define vaccel_TensorflowModelRunRequest_CALLBACK pb_default_field_callback
#define vaccel_TensorflowModelRunRequest_DEFAULT NULL
#define vaccel_TensorflowModelRunRequest_in_nodes_MSGTYPE vaccel_TFNode
#define vaccel_TensorflowModelRunRequest_in_tensors_MSGTYPE vaccel_TFTensor
#define vaccel_TensorflowModelRunRequest_out_nodes_MSGTYPE vaccel_TFNode

#define vaccel_InferenceResult_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  out_tensors,       1)
#define vaccel_InferenceResult_CALLBACK pb_default_field_callback
#define vaccel_InferenceResult_DEFAULT NULL
#define vaccel_InferenceResult_out_tensors_MSGTYPE vaccel_TFTensor

#define vaccel_TensorflowModelRunResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (result,error,result.error),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (result,tensor_result,result.tensor_result),   2)
#define vaccel_TensorflowModelRunResponse_CALLBACK NULL
#define vaccel_TensorflowModelRunResponse_DEFAULT NULL
#define vaccel_TensorflowModelRunResponse_result_error_MSGTYPE vaccel_VaccelError
#define vaccel_TensorflowModelRunResponse_result_tensor_result_MSGTYPE vaccel_InferenceResult

extern const pb_msgdesc_t vaccel_TensorflowModelLoadRequest_msg;
extern const pb_msgdesc_t vaccel_TensorflowModelLoadResponse_msg;
extern const pb_msgdesc_t vaccel_TensorflowModelUnloadRequest_msg;
extern const pb_msgdesc_t vaccel_TensorflowModelUnloadResponse_msg;
extern const pb_msgdesc_t vaccel_TFTensor_msg;
extern const pb_msgdesc_t vaccel_TFNode_msg;
extern const pb_msgdesc_t vaccel_TensorflowModelRunRequest_msg;
extern const pb_msgdesc_t vaccel_InferenceResult_msg;
extern const pb_msgdesc_t vaccel_TensorflowModelRunResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define vaccel_TensorflowModelLoadRequest_fields &vaccel_TensorflowModelLoadRequest_msg
#define vaccel_TensorflowModelLoadResponse_fields &vaccel_TensorflowModelLoadResponse_msg
#define vaccel_TensorflowModelUnloadRequest_fields &vaccel_TensorflowModelUnloadRequest_msg
#define vaccel_TensorflowModelUnloadResponse_fields &vaccel_TensorflowModelUnloadResponse_msg
#define vaccel_TFTensor_fields &vaccel_TFTensor_msg
#define vaccel_TFNode_fields &vaccel_TFNode_msg
#define vaccel_TensorflowModelRunRequest_fields &vaccel_TensorflowModelRunRequest_msg
#define vaccel_InferenceResult_fields &vaccel_InferenceResult_msg
#define vaccel_TensorflowModelRunResponse_fields &vaccel_TensorflowModelRunResponse_msg

/* Maximum encoded size of messages (where known) */
/* vaccel_TensorflowModelLoadResponse_size depends on runtime parameters */
/* vaccel_TFTensor_size depends on runtime parameters */
/* vaccel_TFNode_size depends on runtime parameters */
/* vaccel_TensorflowModelRunRequest_size depends on runtime parameters */
/* vaccel_InferenceResult_size depends on runtime parameters */
/* vaccel_TensorflowModelRunResponse_size depends on runtime parameters */
#define VACCEL_TENSORFLOW_PB_H_MAX_SIZE          vaccel_TensorflowModelLoadRequest_size
#define vaccel_TensorflowModelLoadRequest_size   17
#define vaccel_TensorflowModelUnloadRequest_size 17
#define vaccel_TensorflowModelUnloadResponse_size 15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
